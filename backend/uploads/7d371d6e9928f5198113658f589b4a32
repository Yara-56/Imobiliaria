
import java.math.BigDecimal;
import java.util.concurrent.*;

public class Principal {
    
    public int processadoresDisponiveis() {
        Runtime runtime = Runtime.getRuntime();      
        return runtime.availableProcessors();        
    }
    
    public BigDecimal calculaFatorial(int n) {
        int procs = this.processadoresDisponiveis();
    
        ExecutorService pool =  Executors.newFixedThreadPool(procs);
        Future<BigDecimal> resultados[] = new Future[procs];
        for(int i=0; i<procs; i++) {
            resultados[i] = pool.submit( new FatorialThread(i+1, procs, n) );
        }

        BigDecimal resultado = new BigDecimal(1);
        for(int i=0; i<procs; i++) {
            try {
                resultado = resultado.multiply(resultados[i].get());
            }
            catch(Exception e) {}
        }
        pool.shutdown();
        return resultado;
    }
    
    /**
     * Starts the program
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Principal princ = new Principal();
        long inicio = System.currentTimeMillis();
        BigDecimal res = princ.calculaFatorial(1000000);
        long fim = System.currentTimeMillis();
        double tempo = (fim-inicio)/1000.0;
        System.out.println("Resultado:"+res+" Tempo "+ princ.processadoresDisponiveis()
                           + " fluxos:"+tempo);
    }
}